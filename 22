#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <random>
using namespace std;

struct Account {
    string site;
    string username;
    string password;
};

string generatePassword(const string& key, const string& site, const string& orig) {
    unsigned int seed = 0;
    for (char c : key + site + orig) seed += c * 17;
    mt19937 rng(seed);
    uniform_int_distribution<int> dist(33, 126);

    string newPass;
    for (char c : orig) {
        if (isalpha(c)) {
            bool upper = isupper(c);
            char base = upper ? 'A' : 'a';
            c = base + ((c - base + dist(rng)%26) % 26);
        } else if (isdigit(c)) {
            c = '0' + ((c - '0' + dist(rng)%10) % 10);
        } else if (ispunct(c)) {
            c = 33 + (dist(rng)%15);
        }
        newPass += c;
    }
    return newPass;
}

string checkStrength(const string& pass) {
    bool u=0,l=0,d=0,s=0;
    for (char c: pass) {
        if (isupper(c)) u=1;
        else if (islower(c)) l=1;
        else if (isdigit(c)) d=1;
        else if (ispunct(c)) s=1;
    }
    int score = u+l+d+s;
    if (pass.size()<6) return "Weak";
    else if (score>=3 && pass.size()>=8) return "Strong";
    else return "Medium";
}

void saveToFile(const Account& acc) {
    ofstream file("passwords.txt", ios::app);
    if (!file.is_open()) {
        cout << "Error opening file.\n";
        return;
    }
    file << "Site: " << acc.site 
         << " | Username: " << acc.username 
         << " | Password: " << acc.password << endl;
    file.close();
    cout << "Saved to passwords.txt successfully.\n";
}

int main() {
    vector<Account> db;
    string masterKey;
    int choice;

    cout << "====================================\n";
    cout << "      PASSWORD MANAGER PROJECT\n";
    cout << "====================================\n";
    cout << " Made by Odlanyer Rayne, Bren Christopher,\n";
    cout << " Jasper Satairapan, Ron Adrian,\n";
    cout << " Johan Brixter Soller\n";
    cout << "====================================\n\n";

    cout << "Set your master key: ";
    cin >> masterKey;
    cout << "Master key set.\n";

    while (true) {
        cout << "\n==============================";
        cout << "\n          MAIN MENU";
        cout << "\n==============================";
        cout << "\n[1] Create new password";
        cout << "\n[2] View saved file (passwords.txt)";
        cout << "\n[3] Check password strength";
        cout << "\n[4] Exit";
        cout << "\nChoose: ";
        cin >> choice;

        if (choice==1) {
            string site, user, original;
            cout << "\nEnter site name: ";
            cin >> site;
            cout << "Enter username: ";
            cin >> user;
            cout << "Enter original password: ";
            cin >> original;

            string newPass = generatePassword(masterKey, site, original);
            cout << "\nGenerated Password: " << newPass << endl;
            cout << "Strength: " << checkStrength(newPass) << endl;

            Account a = {site, user, newPass};
            db.push_back(a);
            saveToFile(a);
        }

        else if (choice==2) {
            cout << "\nOpen 'passwords.txt' to see all saved passwords.\n";
        }

        else if (choice==3) {
            string pass;
            cout << "\nEnter password to check: ";
            cin >> pass;
            cout << "Strength: " << checkStrength(pass) << endl;
        }

        else if (choice==4) {
            break;
        }

        else {
            cout << "Invalid choice.\n";
        }
    }

    return 0;
}
